name: CI Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'helm/**'
      - 'docker/**'
      - '.github/workflows/**'
      - 'terraform/**'

env:
  AWS_REGION: us-east-1
  TERRAFORM_VERSION: "1.5.7"

jobs:
  get-terraform-outputs:
    runs-on: ubuntu-latest
    outputs:
      ecr_frontend: ${{ steps.get-urls.outputs.frontend_url }}
      ecr_backend: ${{ steps.get-urls.outputs.backend_url }}
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Get ECR URLs
        id: get-urls
        run: |
          # Get AWS Account ID
          ACCOUNT_ID=$(aws sts get-caller-identity --query "Account" --output text)
          
          # Set default URLs based on naming convention
          FRONTEND_URL="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/lab-eks-cluster-frontend"
          BACKEND_URL="${ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/lab-eks-cluster-backend"
          
          echo "frontend_url=${FRONTEND_URL}" >> $GITHUB_OUTPUT
          echo "backend_url=${BACKEND_URL}" >> $GITHUB_OUTPUT
        env:
          AWS_REGION: ${{ env.AWS_REGION }}

  version:
    needs: get-terraform-outputs
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.semver.outputs.app_version }}
      infra_version: ${{ steps.semver.outputs.infra_version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git

      - name: Determine Versions
        id: semver
        run: |
          # Initialize versions with defaults
          APP_VERSION="0.0.1"
          INFRA_VERSION="0.0.1"
          
          # Try to get versions from file
          if [[ -f versions.json ]]; then
            FILE_APP_VERSION=$(jq -r .app_version versions.json)
            FILE_INFRA_VERSION=$(jq -r .infra_version versions.json)
            
            # Use file versions if valid
            [[ "$FILE_APP_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] && APP_VERSION=$FILE_APP_VERSION
            [[ "$FILE_INFRA_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] && INFRA_VERSION=$FILE_INFRA_VERSION
          fi
          
          # Update versions based on changes
          APP_CHANGES=$(git diff --name-only HEAD^ HEAD | grep -E "^(app/|helm/)" || true)
          INFRA_CHANGES=$(git diff --name-only HEAD^ HEAD | grep -E "^(terraform/|docker/)" || true)
          
          [[ ! -z "$APP_CHANGES" ]] && APP_VERSION=$(echo $APP_VERSION | awk -F. '{$NF+=1; print $0}' OFS=.)
          [[ ! -z "$INFRA_CHANGES" ]] && INFRA_VERSION=$(echo $INFRA_VERSION | awk -F. '{$NF+=1; print $0}' OFS=.)
          
          # Output versions
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "infra_version=$INFRA_VERSION" >> $GITHUB_OUTPUT
          
          # Save versions file
          echo "{\"app_version\":\"$APP_VERSION\",\"infra_version\":\"$INFRA_VERSION\"}" > versions.json

      - name: Commit Version Updates
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git add versions.json
            git commit -m "chore: update versions [skip ci]"
            git push
          fi

  build-terraform-runner:
    needs: version
    permissions:
      packages: write  # Add permission for Docker push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Terraform runner
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Terraform.dockerfile
          push: true
          tags: |
            muzaparoff/terraform-runner:${{ needs.version.outputs.infra_version }}
            muzaparoff/terraform-runner:latest

  build-app:
    needs: [version]
    permissions:
      packages: write  # Add permission for Docker push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./app/frontend
          push: true
          tags: |
            muzaparoff/lab-eks-cluster-frontend:${{ needs.version.outputs.app_version }}
            muzaparoff/lab-eks-cluster-frontend:latest

      - name: Build and push backend
        uses: docker/build-push-action@v4
        with:
          context: ./app/backend
          push: true
          tags: |
            muzaparoff/lab-eks-cluster-backend:${{ needs.version.outputs.app_version }}
            muzaparoff/lab-eks-cluster-backend:latest
